===============
About This Site
===============

The internal ID for this module is mobile-about because about is the
name of the desktop about site.

On the About This Site home screen, the user is shown five links:

* What’s New
* Background Information, System Requirements, and Credits
* Send us feedback

Additionally, a Statistics page is available, but not shown to the
user as a link.

index.php creates the content for all sections of this module
(requested via http://mobi.mit.edu/mobile-about/?page=PAGE), except
What’s New.

What's New

The page new.php invokes the class WhatsNew to populate a list of
announcements that were input via Drupal.

The class WhatsNew file whats_new.php is an extension of the class RSS
(from lib/trunk/rss_services.php) whose source is
http://localhost/drupal/whats_new/rss.xml.

Key methods that WhatsNew adds to RSS include

* get_items(): this function gets the contents of the RSS feed, but in
  reverse order so the most recent item is first.

* getLastTime(): this function reads the user’s whatsnewtime cookie to
  determine whether the user has unread items.

* getTopItemName(): this function determines whether the most recent
  item is more than 2 weeks old.

Background Information, System Requirements and Credits pages

Background Information provides a brief description of the MIT Mobile
Web does. System Requirements provides a brief description of what the
user needs to access the Mobile Web (clearly, users who can see this
page have all the requirements...). Credits lists departments and
people who were involved in building the site.

The content for these pages is written in the templates
ip/background.html, ip/requirements.html, ip/statistics.html, and the
corresponding files in sp/.

Send us feedback

This is a mailto: link to mobiweb@mit.edu.

Statistics

There is no direct link to the statistics page from the module
home. Users can only access it by typing
http://mobi.mit.edu/mobile-about/?page=statistics into their
browser. The SMS statistics page is restricted to the development
team.

The statistics page contains four sections. The first displays the
total page views or messages sent.

The second section displays recent usage of the website (or SMS):

* Per day for the last 7 days
* Per week for the last 12 weeks
* Per month for the last 12 months

The third section displays a ranked list of device types (carriers)
that used the website (SMS) for the last week, 12 weeks, or year.

The fourth list displays a ranked list of modules used for the last
week, 12 weeks, or year.

Key general functions in statistics.php

* summary_total($data, $field, $title): This function generates the
  parameters for the total counts.

* bar_percentage: This function generates parameters to create a
  horizontal bar graph for iPhone/Android pages, or a list of counts
  for other devices.

* trend($data, $field, $title, $interval_type): This function
  generates parameters to create a vertical bar graph of usage per
  day/week/month for iPhone/Android pages, or a list of counts and
  percentages for other devices.

The HTML templates ip/statistics.html and sp/statistics.html are given
graph parameters generated by the three functions above and rendered
accordingly.

Website Statistics

Page View (website) data come from the MySQL table PageViews.

Key functions in page_builder/counter.php.

* PageViews::view_past($interval_type, $duration): This function queries the MySQL table PageViews and returns an array similar to the following::

      Array(  
        [0] => Array(  
          "people" => 10,  
          "shuttleschedule" => 90,  
          "ip" => 70,  
          "sp" => 20,  
          "fp" => 10,  
          "date" => 1234567890,  
          "name" => "Fri",  
          "total" => 100,  
        ),  
      )

Key functions in statistics.php for website:

* generate_popular_web_content($data) reads the module counts from the
  array (people, shuttleschedule etc.) and associates them with their
  display names (People Directory, Shuttle Schedule etc.).

* platform_data reads the bucket counts from the array (ip, ad, sp,
  fp, computer) and associates them with their display name (iPhone,
  Android etc.).

SMS Statistics

SMS data are generated on the SMS server http://sms1.mit.edu and
fetched via a web call. The SMS server returns a JSON string similar
to the following::

  {"days": [  
      {"date":"2009-07-25","count":"8"},  
      {"date":"2009-07-27","count":"14"}  
   ],  
   "sent": [  
      {"date":"2009-07-25","count":"11"},  
      {"date":"2009-07-27","count":"30"}  
   ],  
   "modules": [  
      {"module":"shuttleschedule","count":"15"},  
      {"module":"people","count":"3"},  
      {"module":"calendar","count":"1"},  
      {"module":"stop","count":"1"},  
      {"module":"info","count":"1"},  
      {"module":"emergency","count":"1"}  
   ],  
   "carriers": [  
      {"carrier_information":"31002","count":"18","carrier":"AT&T"},  
      {"carrier_information":"31004","count":"4","carrier":"Tmobile"}  
   ]}

Key functions in statistics.php for SMS:

* aggregate_days($days, $interval_type, $duration): This function is
  given either the days or sent array from the SMS JSON string to
  tally the data into day-, week-, and month-long intervals.

* generate_sms_content($data): This function is given the modules
  array from the the JSON string to generate a list of usage counts
  per module.

* carriers_data($data): This function is given the carriers array from
  the JSON string to produce carrier counts.
