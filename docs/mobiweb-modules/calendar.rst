===============
Events Calendar
===============

The Events Calendar allows users to find events from three sources
provided by MIT:

#. Official MIT Events Calendar (http://events.mit.edu)
#. MIT Academic calendar (http://web.mit.edu/registrar/calendar/index.html)
#. Holidays and religious observances
   (http://web.mit.edu/registrar/calendar/religious.html)

The MIT Events Calendar is queried via a SOAP API, with documentation
published at http://events.mit.edu/help/soap/index.html. The other two
sources have been manually copied into PHP arrays in
lib/trunk/academic_data.php and lib/trunk/holiday_data.php.

When the user accesses the calendar module, they are shown five
options to browse events in addition to a search box. The options are

* Today’s events
* Today’s exhibits
* Academic calendar
* MIT holidays
* Browse by category

The five options above are linked to different PHP files with
different request parameters. calendar_lib.php (in the same directory)
provides methods to write the URL of these links. calendar_lib also
provides:

* day_info($time, $offset): function that gets an array of time
  formats for the current time (abstracting away formatting functions
  in PHP’s own date formatting functions)

* SearchOptions: class that populates menu options for searching by
  various ranges (next 7 days, next 15 days, etc.)

* CalednarForm: class for constructing search forms on subsequent
  pages (pages other than index)

Events from the MIT Events Calendar

Pages that query the MIT Events Calendar require the file
lib/trunk/mit_calendar.php. These pages are day.php, search.php,
categorys.php, sub-categorys.php, category.php, and detail.php.

Classes and methods in lib/trunk/mit_calendar.php

The class SoapClientWrapper is a wrapper around NuSOAP’s SoapClient
class that throws a DataServerException when the something fails
during communication with the MIT Events SOAP server.

The class MIT_Calendar binds to the WSDL specification for the MIT
Events Calendar, defined at
http://events.mit.edu/MITEventsFull.wsdl. The specification includes
the definition of EventManager, Event, and Category objects, among
other things.

* MIT_Calendar::Categorys() is a wrapper around
  EventManager::getCategoryList()

* MIT_Calendar::Category($id) is a wrapper around
  EventManager::getCategory($id)

* MIT_Calendar::subCategorys(Category $category) is a wrapper around
  EventManager::getCategoryList($cateory->catid)

* MIT_Calendar::TodaysExhibitsHeaders($date) creates search parameters
  for EventManager to find exhibits (cateogry ID 5).

* MIT_Calendar::TodaysEventsHeaders($date) uses
  EventManager::getDayEventsHeaders($date) to get a list of events,
  then removes events that also appear in a search for
  MIT_Calendar::TodaysExhibitsHeaders($date).

* MIT_Calendar::getEvent($id) is a wrapper around
  EventManager::getEvent($id) and returns an Event object.

* MIT_Calendar::fullTextSearch($text) creates search parameters for
  EventManager to find events with the fulltext criterion.

Drill down screens (categorys.php, sub-categorys.php)

categorys.php, the top-level drill down list, is reached by clicking
“Browse by” from the module home. The list of categories is output by
calling MIT_Calendar::Categorys().

sub-categorys.php, the second level drill down list, is reached by
clicking any of the category links in categorys.php. The subcategory
lists in each category are generated by calling
MIT_Calendar::subCategorys($category).

List screens (day.php, search.php, and category.php)

day.php is reached by clicking “Today’s events” and “Today’s exhibits”
from the module home. A list of ***event*** objects for the current
day is generated by calling MIT_Calendar::TodaysEventsHeaders($today)
or MIT_Calendar::TodaysExhibitsHeaders($today) depending on which link
the user clicked.

search.php outputs a list of events found by
MIT_Calendar::fullTextSearch($text) .

category.php outputs a list of events within a selected category
(chosen from the drill down category list). The list of events in the
category is found by MIT_Calendar::CategoryEventsHeaders(). If the
user types a search term into the search box, the MIT_Calendar
performs a full text within the category using the search term.

Detail screen

Clicking on a result in any of the list screens brings up an Event
Detail screen showing the event title, location (if any), description,
contact phone (if any), link to external website (if any), and
category.

These event data are provided by MIT_Calendar::getEvent($id), where
$id is defined in the URL from the previous list screen.

The function mapURL($event) creates a link to the Campus Map module if
it encounters a building name in the event location.

Academic calendar

The academic calendar (controlled by academic.php) requires the file
lib/trunk/academic.php (which includes lib/trunk/academic_data.php.

academic.php defines and instantiates the class AcademicCalendar,
which needs to be populated by giving it a year, month, starting (and
optional ending) date, and the text of the event for each event.

academic_data.php then populates the AcademicCalendar instance with actual data.

Holidays

The holidays calendar (controlled by holidays.php) requires the file
lib/trunk/holiday_data.php.

holiday_data stores simple arrays that list the dates and names of
holidays and religious observances for each year.
